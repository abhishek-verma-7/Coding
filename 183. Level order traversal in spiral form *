Given a binary tree and the task is to find the spiral order traversal of the tree.
Spiral order Traversal mean: Starting from level 0 for root node, for all the even levels we print the node's value from right to left and for all the odd 
levels we print the node's value from left to right. 
Example 1:
Input:
      1
    /   \
   3     2
Output:1 3 2

//Function to return a list containing the level order traversal in spiral form.
vector<int> findSpiral(Node *root)
{
    //Your code here
    vector<int> res;
    
    if(root == NULL)
        return res;
        
    queue<Node*>q;
    q.push(root);
    
    bool flag = false;
    
    while(!q.empty())
    {
        int size = q.size();
        
        for(int i = 0; i < size; i++)
        {
            Node *temp = q.front();
                
            if(flag)
                res.push_back(temp->data);
            else
                res.insert(res.end()-i, temp->data);
            
            q.pop();
            
            if(temp->left != NULL)
                q.push(temp->left);
                
            if(temp->right != NULL)
                q.push(temp->right);    
        }
        flag = !flag;
    }
    return res;
}
