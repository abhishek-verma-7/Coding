Given a Binary Tree, find the maximum width of it. Maximum width is defined as the maximum number of nodes at any level.
For example, the maximum width of the following tree is 4 as there are 4 nodes at the 3rd level.

          1
       /     \
     2        3
   /    \    /    \
  4    5   6    7
    \
      8
Example 1:
Input:
       1
     /    \
    2      3
Output: 2
On the first level there is only
one node 1
On the second level there are
two nodes 2, 3 clearly it is the 
maximum number of nodes at any level

// Function to get the maximum width of a binary tree.
    int getMaxWidth(Node* root) {

        // Your code here
        int max_width = 0;
        
        if(root == NULL)
            return max_width;
            
        queue<Node *> q;
        q.push(root);
        
        while(!q.empty())
        {
            int size = q.size();
            
            if(size > max_width)
                max_width = size;
                
            for(int  i = 0; i < size; i++)
            {
                Node *temp = q.front();
                q.pop();
                
                if(temp->left != NULL)
                    q.push(temp->left);
                    
                if(temp->right != NULL)
                    q.push(temp->right);
            }
        }
        return max_width;
    }
