Given a Binary Tree. Find the Zig-Zag Level Order Traversal of the Binary Tree.
Example 1:

Input:
        1
      /   \
     2     3
    / \   /  \
   4   5 6    7
Output:
1 3 2 4 5 6 7
 
 //Function to store the zig zag order traversal of tree in a list.
    vector <int> zigZagTraversal(Node* root)
    {
    	// Code here
    	vector<int> res;
    
        if(root == NULL)
            return res;
            
        queue<Node*>q;
        q.push(root);
        
        bool lefttoright = true;
        
        while(!q.empty())
        {
            int size = q.size();
            
            for(int i = 0; i < size; i++)
            {
                Node *temp = q.front();
                    
                if(lefttoright)
                    res.push_back(temp->data);
                else
                    res.insert(res.end()-i, temp->data);
                
                q.pop();
                
                if(temp->left != NULL)
                    q.push(temp->left);
                    
                if(temp->right != NULL)
                    q.push(temp->right);    
            }
            lefttoright = !lefttoright;
        }
        return res;
    	
    }
